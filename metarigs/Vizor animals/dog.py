import bpy

from rna_prop_ui import rna_idprop_ui_create

from mathutils import Color


def create(obj):  # noqa
    # generated by rigify.utils.write_metarig
    bpy.ops.object.mode_set(mode='EDIT')
    arm = obj.data

    for i in range(6):
        arm.rigify_colors.add()

    arm.rigify_colors[0].name = "Root"
    arm.rigify_colors[0].active = Color((0.5490, 1.0000, 1.0000))
    arm.rigify_colors[0].normal = Color((0.4353, 0.1843, 0.4157))
    arm.rigify_colors[0].select = Color((0.3140, 0.7840, 1.0000))
    arm.rigify_colors[0].standard_colors_lock = True
    arm.rigify_colors[1].name = "IK"
    arm.rigify_colors[1].active = Color((0.5490, 1.0000, 1.0000))
    arm.rigify_colors[1].normal = Color((0.6039, 0.0000, 0.0000))
    arm.rigify_colors[1].select = Color((0.3140, 0.7840, 1.0000))
    arm.rigify_colors[1].standard_colors_lock = True
    arm.rigify_colors[2].name = "Special"
    arm.rigify_colors[2].active = Color((0.5490, 1.0000, 1.0000))
    arm.rigify_colors[2].normal = Color((0.9569, 0.7882, 0.0471))
    arm.rigify_colors[2].select = Color((0.3140, 0.7840, 1.0000))
    arm.rigify_colors[2].standard_colors_lock = True
    arm.rigify_colors[3].name = "Tweak"
    arm.rigify_colors[3].active = Color((0.5490, 1.0000, 1.0000))
    arm.rigify_colors[3].normal = Color((0.0392, 0.2118, 0.5804))
    arm.rigify_colors[3].select = Color((0.3140, 0.7840, 1.0000))
    arm.rigify_colors[3].standard_colors_lock = True
    arm.rigify_colors[4].name = "FK"
    arm.rigify_colors[4].active = Color((0.5490, 1.0000, 1.0000))
    arm.rigify_colors[4].normal = Color((0.1176, 0.5686, 0.0353))
    arm.rigify_colors[4].select = Color((0.3140, 0.7840, 1.0000))
    arm.rigify_colors[4].standard_colors_lock = True
    arm.rigify_colors[5].name = "Extra"
    arm.rigify_colors[5].active = Color((0.5490, 1.0000, 1.0000))
    arm.rigify_colors[5].normal = Color((0.9686, 0.2510, 0.0941))
    arm.rigify_colors[5].select = Color((0.3140, 0.7840, 1.0000))
    arm.rigify_colors[5].standard_colors_lock = True

    bone_collections = {}

    for bcoll in list(arm.collections_all):
        arm.collections.remove(bcoll)

    def add_bone_collection(name, *, parent=None, ui_row=0, ui_title='', sel_set=False, color_set_id=0):
        new_bcoll = arm.collections.new(name, parent=bone_collections.get(parent))
        new_bcoll.rigify_ui_row = ui_row
        new_bcoll.rigify_ui_title = ui_title
        new_bcoll.rigify_sel_set = sel_set
        new_bcoll.rigify_color_set_id = color_set_id
        bone_collections[name] = new_bcoll

    def assign_bone_collections(pose_bone, *coll_names):
        assert not len(pose_bone.bone.collections)
        for name in coll_names:
            bone_collections[name].assign(pose_bone)

    def assign_bone_collection_refs(params, attr_name, *coll_names):
        ref_list = getattr(params, attr_name + '_coll_refs', None)
        if ref_list is not None:
            for name in coll_names:
                ref_list.add().set_collection(bone_collections[name])

    add_bone_collection('Body', ui_row=3, color_set_id=5)
    add_bone_collection('Body (tweaks)', ui_row=4, color_set_id=4)
    add_bone_collection('Paw.L', ui_row=6, color_set_id=2)
    add_bone_collection('Paw.L (fk)', ui_row=8, color_set_id=5)
    add_bone_collection('Paw.L (tweaks)', ui_row=7, color_set_id=4)
    add_bone_collection('Paw.R', ui_row=6, color_set_id=2)
    add_bone_collection('Paw.R (fk)', ui_row=8, color_set_id=5)
    add_bone_collection('Paw.R (tweaks)', ui_row=7, color_set_id=4)
    add_bone_collection('Leg.L', ui_row=10, color_set_id=2)
    add_bone_collection('Leg.L (fk)', ui_row=12, color_set_id=5)
    add_bone_collection('Leg.L (tweaks)', ui_row=11, color_set_id=4)
    add_bone_collection('Leg.R', ui_row=10, color_set_id=2)
    add_bone_collection('Leg.R (fk)', ui_row=12, color_set_id=5)
    add_bone_collection('Leg.R (tweaks)', ui_row=11, color_set_id=4)
    add_bone_collection('Tail', ui_row=14, color_set_id=6)
    add_bone_collection('Tail (tweaks)', ui_row=15, color_set_id=4)
    add_bone_collection('Head', ui_row=3, color_set_id=5)
    add_bone_collection('Head (tweaks)', ui_row=4, color_set_id=4)
    add_bone_collection('Face', ui_row=1, color_set_id=6)
    add_bone_collection('Face (tweaks)', ui_row=2, color_set_id=4)
    add_bone_collection('Root', ui_row=18)

    bones = {}

    bone = arm.edit_bones.new('pelvis')
    bone.head = 0.0000, 0.2717, 0.7471
    bone.tail = 0.0000, 0.0383, 0.7615
    bone.roll = 0.0000
    bone.use_connect = False
    bones['pelvis'] = bone.name
    bone = arm.edit_bones.new('tail')
    bone.head = 0.0000, 0.3200, 0.7504
    bone.tail = 0.0000, 0.4251, 0.6697
    bone.roll = -3.1416
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['pelvis']]
    bones['tail'] = bone.name
    bone = arm.edit_bones.new('thigh.L')
    bone.head = 0.1395, 0.2424, 0.7067
    bone.tail = 0.1395, 0.1434, 0.4206
    bone.roll = 3.1416
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['pelvis']]
    bones['thigh.L'] = bone.name
    bone = arm.edit_bones.new('thigh.R')
    bone.head = -0.1395, 0.2424, 0.7067
    bone.tail = -0.1395, 0.1434, 0.4206
    bone.roll = -3.1416
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['pelvis']]
    bones['thigh.R'] = bone.name
    bone = arm.edit_bones.new('spine')
    bone.head = 0.0000, 0.0383, 0.7615
    bone.tail = 0.0000, -0.2046, 0.8156
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['pelvis']]
    bones['spine'] = bone.name
    bone = arm.edit_bones.new('tail2')
    bone.head = 0.0000, 0.4251, 0.6697
    bone.tail = 0.0000, 0.5520, 0.6149
    bone.roll = -3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['tail']]
    bones['tail2'] = bone.name
    bone = arm.edit_bones.new('shin.L')
    bone.head = 0.1395, 0.1434, 0.4206
    bone.tail = 0.1395, 0.3760, 0.2480
    bone.roll = 3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['thigh.L']]
    bones['shin.L'] = bone.name
    bone = arm.edit_bones.new('shin.R')
    bone.head = -0.1395, 0.1434, 0.4206
    bone.tail = -0.1395, 0.3760, 0.2480
    bone.roll = -3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['thigh.R']]
    bones['shin.R'] = bone.name
    bone = arm.edit_bones.new('chest')
    bone.head = 0.0000, -0.2046, 0.8156
    bone.tail = 0.0000, -0.5177, 0.9084
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['spine']]
    bones['chest'] = bone.name
    bone = arm.edit_bones.new('tail3')
    bone.head = 0.0000, 0.5520, 0.6149
    bone.tail = 0.0000, 0.7038, 0.5836
    bone.roll = -3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['tail2']]
    bones['tail3'] = bone.name
    bone = arm.edit_bones.new('foot.L')
    bone.head = 0.1395, 0.3760, 0.2480
    bone.tail = 0.1395, 0.3842, 0.0608
    bone.roll = 3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['shin.L']]
    bones['foot.L'] = bone.name
    bone = arm.edit_bones.new('foot.R')
    bone.head = -0.1395, 0.3760, 0.2480
    bone.tail = -0.1395, 0.3842, 0.0608
    bone.roll = -3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['shin.R']]
    bones['foot.R'] = bone.name
    bone = arm.edit_bones.new('shoulder.L')
    bone.head = 0.1394, -0.4019, 0.9292
    bone.tail = 0.1696, -0.5878, 0.7014
    bone.roll = -0.1317
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['chest']]
    bones['shoulder.L'] = bone.name
    bone = arm.edit_bones.new('chestPuf')
    bone.head = 0.0000, -0.1891, 0.6290
    bone.tail = 0.0000, -0.3395, 0.6307
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['chest']]
    bones['chestPuf'] = bone.name
    bone = arm.edit_bones.new('neck')
    bone.head = 0.0000, -0.5177, 0.9084
    bone.tail = 0.0000, -0.6217, 1.0699
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['chest']]
    bones['neck'] = bone.name
    bone = arm.edit_bones.new('shoulder.R')
    bone.head = -0.1394, -0.4019, 0.9292
    bone.tail = -0.1696, -0.5878, 0.7014
    bone.roll = 0.1317
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['chest']]
    bones['shoulder.R'] = bone.name
    bone = arm.edit_bones.new('tail4')
    bone.head = 0.0000, 0.7038, 0.5836
    bone.tail = 0.0000, 0.8364, 0.5911
    bone.roll = -3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['tail3']]
    bones['tail4'] = bone.name
    bone = arm.edit_bones.new('toe.L')
    bone.head = 0.1395, 0.3842, 0.0608
    bone.tail = 0.1395, 0.3252, 0.0310
    bone.roll = 3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['foot.L']]
    bones['toe.L'] = bone.name
    bone = arm.edit_bones.new('toe.R')
    bone.head = -0.1395, 0.3842, 0.0608
    bone.tail = -0.1395, 0.3252, 0.0310
    bone.roll = -3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['foot.R']]
    bones['toe.R'] = bone.name
    bone = arm.edit_bones.new('front_thigh.L')
    bone.head = 0.1696, -0.5878, 0.7014
    bone.tail = 0.1577, -0.4576, 0.4454
    bone.roll = -3.0953
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['shoulder.L']]
    bones['front_thigh.L'] = bone.name
    bone = arm.edit_bones.new('neck2')
    bone.head = 0.0000, -0.6217, 1.0699
    bone.tail = 0.0000, -0.7256, 1.2313
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['neck']]
    bones['neck2'] = bone.name
    bone = arm.edit_bones.new('neck_H')
    bone.head = 0.0000, -0.5177, 0.9084
    bone.tail = 0.0000, -0.7539, 0.6210
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['neck']]
    bone.bbone_easein = 0.0
    bone.bbone_easeout = 0.0
    bones['neck_H'] = bone.name
    bone = arm.edit_bones.new('neck2_H')
    bone.head = 0.0000, -0.6217, 1.0699
    bone.tail = 0.0000, -0.8040, 0.8042
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['neck']]
    bone.bbone_easein = 0.0
    bone.bbone_easeout = 0.0
    bones['neck2_H'] = bone.name
    bone = arm.edit_bones.new('neck3_H')
    bone.head = 0.0000, -0.7256, 1.2313
    bone.tail = 0.0000, -0.8541, 0.9873
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['neck']]
    bones['neck3_H'] = bone.name
    bone = arm.edit_bones.new('front_thigh.R')
    bone.head = -0.1696, -0.5878, 0.7014
    bone.tail = -0.1577, -0.4576, 0.4454
    bone.roll = 3.0953
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['shoulder.R']]
    bones['front_thigh.R'] = bone.name
    bone = arm.edit_bones.new('tail5')
    bone.head = 0.0000, 0.8364, 0.5911
    bone.tail = 0.0000, 0.9596, 0.6506
    bone.roll = -3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['tail4']]
    bones['tail5'] = bone.name
    bone = arm.edit_bones.new('tiptoe.L')
    bone.head = 0.1395, 0.3252, 0.0310
    bone.tail = 0.1395, 0.2663, 0.0012
    bone.roll = 3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['toe.L']]
    bones['tiptoe.L'] = bone.name
    bone = arm.edit_bones.new('tiptoe.R')
    bone.head = -0.1395, 0.3252, 0.0310
    bone.tail = -0.1395, 0.2663, 0.0012
    bone.roll = -3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['toe.R']]
    bones['tiptoe.R'] = bone.name
    bone = arm.edit_bones.new('front_shin.L')
    bone.head = 0.1577, -0.4576, 0.4454
    bone.tail = 0.1454, -0.4671, 0.1789
    bone.roll = -3.0954
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['front_thigh.L']]
    bones['front_shin.L'] = bone.name
    bone = arm.edit_bones.new('head')
    bone.head = 0.0000, -0.7256, 1.2313
    bone.tail = 0.0000, -0.9819, 1.2313
    bone.roll = -3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['neck2']]
    bones['head'] = bone.name
    bone = arm.edit_bones.new('front_shin.R')
    bone.head = -0.1577, -0.4576, 0.4454
    bone.tail = -0.1454, -0.4671, 0.1789
    bone.roll = 3.0954
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['front_thigh.R']]
    bones['front_shin.R'] = bone.name
    bone = arm.edit_bones.new('front_foot.L')
    bone.head = 0.1454, -0.4671, 0.1789
    bone.tail = 0.1395, -0.4796, 0.0509
    bone.roll = -3.0953
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['front_shin.L']]
    bones['front_foot.L'] = bone.name
    bone = arm.edit_bones.new('jaw')
    bone.head = 0.0000, -0.8174, 1.1589
    bone.tail = 0.0000, -1.0147, 1.0370
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['jaw'] = bone.name
    bone = arm.edit_bones.new('ear.L')
    bone.head = 0.1312, -0.7333, 1.3710
    bone.tail = 0.1771, -0.7807, 1.5421
    bone.roll = 0.2622
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['ear.L'] = bone.name
    bone = arm.edit_bones.new('nose')
    bone.head = 0.0000, -1.0744, 1.1754
    bone.tail = 0.0000, -1.1402, 1.1758
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['nose'] = bone.name
    bone = arm.edit_bones.new('eye.L')
    bone.head = 0.0678, -0.8934, 1.2508
    bone.tail = 0.0678, -0.9661, 1.2508
    bone.roll = -3.1415
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['eye.L'] = bone.name
    bone = arm.edit_bones.new('eye.R')
    bone.head = -0.0678, -0.8934, 1.2508
    bone.tail = -0.0678, -0.9661, 1.2508
    bone.roll = -3.1415
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['eye.R'] = bone.name
    bone = arm.edit_bones.new('ear.R')
    bone.head = -0.1312, -0.7333, 1.3710
    bone.tail = -0.1771, -0.7807, 1.5421
    bone.roll = -0.2622
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['ear.R'] = bone.name
    bone = arm.edit_bones.new('front_foot.R')
    bone.head = -0.1454, -0.4671, 0.1789
    bone.tail = -0.1395, -0.4796, 0.0509
    bone.roll = 3.0953
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['front_shin.R']]
    bones['front_foot.R'] = bone.name
    bone = arm.edit_bones.new('front_toe.L')
    bone.head = 0.1395, -0.4796, 0.0509
    bone.tail = 0.1395, -0.5486, 0.0271
    bone.roll = 3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['front_foot.L']]
    bones['front_toe.L'] = bone.name
    bone = arm.edit_bones.new('tongue')
    bone.head = 0.0000, -0.8001, 1.0530
    bone.tail = 0.0000, -0.8972, 1.0645
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['jaw']]
    bones['tongue'] = bone.name
    bone = arm.edit_bones.new('eye_up.L')
    bone.head = 0.0678, -0.8934, 1.2508
    bone.tail = 0.0678, -0.9607, 1.2914
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['eye.L']]
    bones['eye_up.L'] = bone.name
    bone = arm.edit_bones.new('eye_down.L')
    bone.head = 0.0678, -0.8934, 1.2508
    bone.tail = 0.0678, -0.9624, 1.2317
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['eye.L']]
    bones['eye_down.L'] = bone.name
    bone = arm.edit_bones.new('eye_up.R')
    bone.head = -0.0678, -0.8934, 1.2508
    bone.tail = -0.0678, -0.9607, 1.2914
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['eye.R']]
    bones['eye_up.R'] = bone.name
    bone = arm.edit_bones.new('eye_down.R')
    bone.head = -0.0678, -0.8934, 1.2508
    bone.tail = -0.0678, -0.9624, 1.2317
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['eye.R']]
    bones['eye_down.R'] = bone.name
    bone = arm.edit_bones.new('front_toe.R')
    bone.head = -0.1395, -0.4796, 0.0509
    bone.tail = -0.1395, -0.5486, 0.0271
    bone.roll = -3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['front_foot.R']]
    bones['front_toe.R'] = bone.name
    bone = arm.edit_bones.new('front_tiptoe.L')
    bone.head = 0.1395, -0.5486, 0.0271
    bone.tail = 0.1395, -0.6158, 0.0040
    bone.roll = 3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['front_toe.L']]
    bones['front_tiptoe.L'] = bone.name
    bone = arm.edit_bones.new('tongue2')
    bone.head = 0.0000, -0.8972, 1.0645
    bone.tail = 0.0000, -0.9438, 1.0554
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['tongue']]
    bones['tongue2'] = bone.name
    bone = arm.edit_bones.new('front_tiptoe.R')
    bone.head = -0.1395, -0.5486, 0.0271
    bone.tail = -0.1395, -0.6158, 0.0040
    bone.roll = -3.1416
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['front_toe.R']]
    bones['front_tiptoe.R'] = bone.name
    bone = arm.edit_bones.new('tongue3')
    bone.head = 0.0000, -0.9438, 1.0554
    bone.tail = 0.0000, -0.9964, 1.0452
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['tongue2']]
    bones['tongue3'] = bone.name

    bpy.ops.object.mode_set(mode='OBJECT')
    pbone = obj.pose.bones[bones['pelvis']]
    pbone.rigify_type = 'vizor.spines.quadrupet_spine'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Body')
    try:
        pbone.rigify_parameters.pivot_pos = 1
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Body (tweaks)')
    assign_bone_collection_refs(pbone.rigify_parameters, 'fk', 'Body')
    try:
        pbone.rigify_parameters.fk_layers_extra = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.enable_scale = False
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.tweak_layers_extra = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.make_fk_controls = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['tail']]
    pbone.rigify_type = 'game.basic.copy_chain'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Tail')
    try:
        pbone.rigify_parameters.enable_scale = False
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.copy_chain_widget_type = 'circle'
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['thigh.L']]
    pbone.rigify_type = 'game.limbs.rear_paw'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.L')
    try:
        pbone.rigify_parameters.rotation_axis = 'x'
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'fk', 'Leg.L (fk)')
    try:
        pbone.rigify_parameters.fk_layers_extra = True
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Leg.L (tweaks)')
    try:
        pbone.rigify_parameters.tweak_layers_extra = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.auto_align_extremity = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.make_custom_pivot = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.enable_scale = False
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.leaf_hierarchy = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['thigh.R']]
    pbone.rigify_type = 'game.limbs.rear_paw'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.R')
    try:
        pbone.rigify_parameters.rotation_axis = 'x'
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'fk', 'Leg.R (fk)')
    try:
        pbone.rigify_parameters.fk_layers_extra = True
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Leg.R (tweaks)')
    try:
        pbone.rigify_parameters.tweak_layers_extra = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.auto_align_extremity = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.make_custom_pivot = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.enable_scale = False
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.leaf_hierarchy = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['spine']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Body')
    pbone = obj.pose.bones[bones['tail2']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Tail')
    pbone = obj.pose.bones[bones['shin.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.L')
    pbone = obj.pose.bones[bones['shin.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.R')
    pbone = obj.pose.bones[bones['chest']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Body')
    pbone = obj.pose.bones[bones['tail3']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Tail')
    pbone = obj.pose.bones[bones['foot.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.L')
    pbone = obj.pose.bones[bones['foot.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.R')
    pbone = obj.pose.bones[bones['shoulder.L']]
    pbone.rigify_type = 'vizor.limbs.quadrupet_scapula'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Paw.L')
    try:
        pbone.rigify_parameters.super_copy_widget_type = 'shoulder'
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.enable_scale = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['chestPuf']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Body')
    pbone = obj.pose.bones[bones['neck']]
    pbone.rigify_type = 'game.spines.super_head'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Head')
    try:
        pbone.rigify_parameters.enable_scale = False
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Head (tweaks)')
    pbone = obj.pose.bones[bones['shoulder.R']]
    pbone.rigify_type = 'vizor.limbs.quadrupet_scapula'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Paw.R')
    try:
        pbone.rigify_parameters.super_copy_widget_type = 'circle'
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.enable_scale = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['tail4']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Tail')
    pbone = obj.pose.bones[bones['toe.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.L')
    pbone = obj.pose.bones[bones['toe.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.R')
    pbone = obj.pose.bones[bones['front_thigh.L']]
    pbone.rigify_type = 'game.limbs.front_paw'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Paw.L')
    assign_bone_collection_refs(pbone.rigify_parameters, 'fk', 'Paw.L (fk)')
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Paw.L (tweaks)')
    try:
        pbone.rigify_parameters.enable_scale = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['neck2']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Head')
    pbone = obj.pose.bones[bones['neck_H']]
    pbone.rigify_type = 'vizor.spines.quadrupet_neck_skin'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Head')
    pbone = obj.pose.bones[bones['neck2_H']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Head')
    pbone = obj.pose.bones[bones['neck3_H']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Head')
    pbone = obj.pose.bones[bones['front_thigh.R']]
    pbone.rigify_type = 'game.limbs.front_paw'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Paw.R')
    assign_bone_collection_refs(pbone.rigify_parameters, 'fk', 'Paw.R (fk)')
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Paw.R (tweaks)')
    try:
        pbone.rigify_parameters.fk_layers_extra = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.tweak_layers_extra = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.enable_scale = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['tail5']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Tail')
    pbone = obj.pose.bones[bones['tiptoe.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.L')
    pbone = obj.pose.bones[bones['tiptoe.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.R')
    pbone = obj.pose.bones[bones['front_shin.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Paw.L')
    pbone = obj.pose.bones[bones['head']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Head')
    pbone = obj.pose.bones[bones['front_shin.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Paw.R')
    pbone = obj.pose.bones[bones['front_foot.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Paw.L')
    pbone = obj.pose.bones[bones['jaw']]
    pbone.rigify_type = 'game.basic.super_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.super_copy_widget_type = 'jaw'
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.enable_scale = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['ear.L']]
    pbone.rigify_type = 'game.basic.super_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    pbone = obj.pose.bones[bones['nose']]
    pbone.rigify_type = 'game.basic.super_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['eye.L']]
    pbone.rigify_type = 'vizor.face.basic_eye'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.make_widget = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['eye.R']]
    pbone.rigify_type = 'vizor.face.basic_eye'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.make_widget = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['ear.R']]
    pbone.rigify_type = 'game.basic.super_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    pbone = obj.pose.bones[bones['front_foot.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Paw.R')
    pbone = obj.pose.bones[bones['front_toe.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Paw.L')
    pbone = obj.pose.bones[bones['tongue']]
    pbone.rigify_type = 'game.basic.super_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.super_copy_widget_type = 'bone'
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['eye_up.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['eye_down.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.make_widget = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['eye_up.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['eye_down.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.make_widget = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['front_toe.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Paw.R')
    pbone = obj.pose.bones[bones['front_tiptoe.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Paw.L')
    pbone = obj.pose.bones[bones['tongue2']]
    pbone.rigify_type = 'game.basic.copy_chain'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.copy_chain_widget_type = 'bone'
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['front_tiptoe.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Paw.R')
    pbone = obj.pose.bones[bones['tongue3']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')

    bpy.ops.object.mode_set(mode='EDIT')
    for bone in arm.edit_bones:
        bone.select = False
        bone.select_head = False
        bone.select_tail = False
    for b in bones:
        bone = arm.edit_bones[bones[b]]
        bone.select = True
        bone.select_head = True
        bone.select_tail = True
        bone.bbone_x = bone.bbone_z = bone.length * 0.05
        arm.edit_bones.active = bone

    arm.collections.active_index = 0

    return bones


if __name__ == "__main__":
    create(bpy.context.active_object)
