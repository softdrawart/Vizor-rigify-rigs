import bpy

from rna_prop_ui import rna_idprop_ui_create

from mathutils import Color


def create(obj):  # noqa
    # generated by rigify.utils.write_metarig
    bpy.ops.object.mode_set(mode='EDIT')
    arm = obj.data

    for i in range(6):
        arm.rigify_colors.add()

    arm.rigify_colors[0].name = "Root"
    arm.rigify_colors[0].active = Color((0.5490, 1.0000, 1.0000))
    arm.rigify_colors[0].normal = Color((0.4353, 0.1843, 0.4157))
    arm.rigify_colors[0].select = Color((0.3137, 0.7843, 1.0000))
    arm.rigify_colors[0].standard_colors_lock = True
    arm.rigify_colors[1].name = "IK"
    arm.rigify_colors[1].active = Color((0.5490, 1.0000, 1.0000))
    arm.rigify_colors[1].normal = Color((0.6039, 0.0000, 0.0000))
    arm.rigify_colors[1].select = Color((0.3137, 0.7843, 1.0000))
    arm.rigify_colors[1].standard_colors_lock = True
    arm.rigify_colors[2].name = "Special"
    arm.rigify_colors[2].active = Color((0.5490, 1.0000, 1.0000))
    arm.rigify_colors[2].normal = Color((0.9569, 0.7882, 0.0471))
    arm.rigify_colors[2].select = Color((0.3137, 0.7843, 1.0000))
    arm.rigify_colors[2].standard_colors_lock = True
    arm.rigify_colors[3].name = "Tweak"
    arm.rigify_colors[3].active = Color((0.5490, 1.0000, 1.0000))
    arm.rigify_colors[3].normal = Color((0.0392, 0.2118, 0.5804))
    arm.rigify_colors[3].select = Color((0.3137, 0.7843, 1.0000))
    arm.rigify_colors[3].standard_colors_lock = True
    arm.rigify_colors[4].name = "FK"
    arm.rigify_colors[4].active = Color((0.5490, 1.0000, 1.0000))
    arm.rigify_colors[4].normal = Color((0.1176, 0.5686, 0.0353))
    arm.rigify_colors[4].select = Color((0.3137, 0.7843, 1.0000))
    arm.rigify_colors[4].standard_colors_lock = True
    arm.rigify_colors[5].name = "Extra"
    arm.rigify_colors[5].active = Color((0.5490, 1.0000, 1.0000))
    arm.rigify_colors[5].normal = Color((0.9686, 0.2510, 0.0941))
    arm.rigify_colors[5].select = Color((0.3137, 0.7843, 1.0000))
    arm.rigify_colors[5].standard_colors_lock = True

    bone_collections = {}

    for bcoll in list(arm.collections_all):
        arm.collections.remove(bcoll)

    def add_bone_collection(name, *, parent=None, ui_row=0, ui_title='', sel_set=False, color_set_id=0):
        new_bcoll = arm.collections.new(name, parent=bone_collections.get(parent))
        new_bcoll.rigify_ui_row = ui_row
        new_bcoll.rigify_ui_title = ui_title
        new_bcoll.rigify_sel_set = sel_set
        new_bcoll.rigify_color_set_id = color_set_id
        bone_collections[name] = new_bcoll

    def assign_bone_collections(pose_bone, *coll_names):
        assert not len(pose_bone.bone.collections)
        for name in coll_names:
            bone_collections[name].assign(pose_bone)

    def assign_bone_collection_refs(params, attr_name, *coll_names):
        ref_list = getattr(params, attr_name + '_coll_refs', None)
        if ref_list is not None:
            for name in coll_names:
                ref_list.add().set_collection(bone_collections[name])

    add_bone_collection('Face', ui_row=1, color_set_id=5)
    add_bone_collection('Face (Primary)', ui_row=2, color_set_id=2)
    add_bone_collection('Face (Secondary)', ui_row=2, color_set_id=3)
    add_bone_collection('Torso', ui_row=3, color_set_id=3)
    add_bone_collection('Torso (Tweak)', ui_row=4, color_set_id=4)
    add_bone_collection('Fingers', ui_row=5, color_set_id=6)
    add_bone_collection('Fingers (Detail)', ui_row=6, color_set_id=5)
    add_bone_collection('Arm.L (IK)', ui_row=7, color_set_id=2)
    add_bone_collection('Arm.L (FK)', ui_row=8, color_set_id=5)
    add_bone_collection('Arm.L (Tweak)', ui_row=9, color_set_id=4)
    add_bone_collection('Arm.R (IK)', ui_row=7, color_set_id=2)
    add_bone_collection('Arm.R (FK)', ui_row=8, color_set_id=5)
    add_bone_collection('Arm.R (Tweak)', ui_row=9, color_set_id=4)
    add_bone_collection('Leg.L (IK)', ui_row=10, color_set_id=2)
    add_bone_collection('Leg.L (FK)', ui_row=11, color_set_id=5)
    add_bone_collection('Leg.L (Tweak)', ui_row=12, color_set_id=4)
    add_bone_collection('Leg.R (IK)', ui_row=10, color_set_id=2)
    add_bone_collection('Leg.R (FK)', ui_row=11, color_set_id=5)
    add_bone_collection('Leg.R (Tweak)', ui_row=12, color_set_id=4)
    add_bone_collection('Root', ui_row=15, color_set_id=1)
    add_bone_collection('hair', ui_row=13)

    bones = {}

    bone = arm.edit_bones.new('char_root')
    bone.head = 0.0000, 0.0000, 0.0000
    bone.tail = 0.0000, 0.2160, 0.0000
    bone.roll = 0.0000
    bone.use_connect = False
    bones['char_root'] = bone.name
    bone = arm.edit_bones.new('spine')
    bone.head = 0.0000, -0.0299, 0.9263
    bone.tail = 0.0000, -0.0314, 1.0373
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['char_root']]
    bones['spine'] = bone.name
    bone = arm.edit_bones.new('spine.001')
    bone.head = 0.0000, -0.0314, 1.0373
    bone.tail = -0.0000, -0.0214, 1.2062
    bone.roll = -0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['spine']]
    bones['spine.001'] = bone.name
    bone = arm.edit_bones.new('thigh.L')
    bone.head = 0.1027, -0.0299, 0.9263
    bone.tail = 0.1359, -0.0252, 0.5107
    bone.roll = -0.0868
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['spine']]
    bones['thigh.L'] = bone.name
    bone = arm.edit_bones.new('thigh.R')
    bone.head = -0.1027, -0.0299, 0.9263
    bone.tail = -0.1359, -0.0252, 0.5107
    bone.roll = 0.0868
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['spine']]
    bones['thigh.R'] = bone.name
    bone = arm.edit_bones.new('spine.003')
    bone.head = -0.0000, -0.0214, 1.2062
    bone.tail = 0.0000, 0.0106, 1.4993
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['spine.001']]
    bones['spine.003'] = bone.name
    bone = arm.edit_bones.new('shin.L')
    bone.head = 0.1359, -0.0252, 0.5107
    bone.tail = 0.1678, 0.0188, 0.1288
    bone.roll = -0.0745
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['thigh.L']]
    bones['shin.L'] = bone.name
    bone = arm.edit_bones.new('shin.R')
    bone.head = -0.1359, -0.0252, 0.5107
    bone.tail = -0.1678, 0.0188, 0.1288
    bone.roll = 0.0745
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['thigh.R']]
    bones['shin.R'] = bone.name
    bone = arm.edit_bones.new('neck.001')
    bone.head = 0.0000, 0.0106, 1.4993
    bone.tail = 0.0000, -0.0150, 1.6564
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['spine.003']]
    bones['neck.001'] = bone.name
    bone = arm.edit_bones.new('shoulder.L')
    bone.head = 0.0332, -0.0049, 1.4209
    bone.tail = 0.1675, 0.0178, 1.4036
    bone.roll = 0.0454
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['spine.003']]
    bones['shoulder.L'] = bone.name
    bone = arm.edit_bones.new('shoulder.R')
    bone.head = -0.0332, -0.0049, 1.4209
    bone.tail = -0.1675, 0.0178, 1.4036
    bone.roll = -0.0454
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['spine.003']]
    bones['shoulder.R'] = bone.name
    bone = arm.edit_bones.new('foot.L')
    bone.head = 0.1678, 0.0188, 0.1288
    bone.tail = 0.1673, -0.0698, 0.0491
    bone.roll = 0.0119
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['shin.L']]
    bones['foot.L'] = bone.name
    bone = arm.edit_bones.new('foot.R')
    bone.head = -0.1678, 0.0188, 0.1288
    bone.tail = -0.1673, -0.0698, 0.0491
    bone.roll = -0.0119
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['shin.R']]
    bones['foot.R'] = bone.name
    bone = arm.edit_bones.new('head')
    bone.head = 0.0000, -0.0150, 1.6564
    bone.tail = 0.0000, -0.0148, 1.9884
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['neck.001']]
    bones['head'] = bone.name
    bone = arm.edit_bones.new('upper_arm.L')
    bone.head = 0.1789, 0.0261, 1.3614
    bone.tail = 0.3327, 0.0357, 1.1761
    bone.roll = 2.4778
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['shoulder.L']]
    bones['upper_arm.L'] = bone.name
    bone = arm.edit_bones.new('upper_arm.R')
    bone.head = -0.1789, 0.0261, 1.3614
    bone.tail = -0.3327, 0.0357, 1.1761
    bone.roll = -2.4778
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['shoulder.R']]
    bones['upper_arm.R'] = bone.name
    bone = arm.edit_bones.new('toe.L')
    bone.head = 0.1673, -0.0698, 0.0491
    bone.tail = 0.1673, -0.1788, 0.0491
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['foot.L']]
    bones['toe.L'] = bone.name
    bone = arm.edit_bones.new('heel.02.L')
    bone.head = 0.1345, 0.0697, 0.0000
    bone.tail = 0.2036, 0.0697, 0.0000
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['foot.L']]
    bones['heel.02.L'] = bone.name
    bone = arm.edit_bones.new('toe.R')
    bone.head = -0.1673, -0.0698, 0.0491
    bone.tail = -0.1673, -0.1788, 0.0491
    bone.roll = -0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['foot.R']]
    bones['toe.R'] = bone.name
    bone = arm.edit_bones.new('heel.02.R')
    bone.head = -0.1345, 0.0697, 0.0000
    bone.tail = -0.2036, 0.0697, 0.0000
    bone.roll = -0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['foot.R']]
    bones['heel.02.R'] = bone.name
    bone = arm.edit_bones.new('DEF-eye_up.L')
    bone.head = 0.0520, -0.1143, 1.7959
    bone.tail = 0.0590, -0.1589, 1.8121
    bone.roll = 4.1015
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['DEF-eye_up.L'] = bone.name
    bone = arm.edit_bones.new('DEF-eye_down.L')
    bone.head = 0.0520, -0.1143, 1.7959
    bone.tail = 0.0593, -0.1570, 1.7767
    bone.roll = 2.4086
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['DEF-eye_down.L'] = bone.name
    bone = arm.edit_bones.new('DEF-eye.L')
    bone.head = 0.0520, -0.1143, 1.7959
    bone.tail = 0.0590, -0.1585, 1.7961
    bone.roll = 0.0009
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['DEF-eye.L'] = bone.name
    bone = arm.edit_bones.new('eye_C')
    bone.head = 0.0000, -0.2985, 1.7950
    bone.tail = 0.0000, -0.3430, 1.7950
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['eye_C'] = bone.name
    bone = arm.edit_bones.new('eye_up_C.L')
    bone.head = 0.0622, -0.1798, 1.8197
    bone.tail = 0.0622, -0.2011, 1.8197
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['eye_up_C.L'] = bone.name
    bone = arm.edit_bones.new('eye_down_C.L')
    bone.head = 0.0629, -0.1786, 1.7670
    bone.tail = 0.0629, -0.1998, 1.7670
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['eye_down_C.L'] = bone.name
    bone = arm.edit_bones.new('DEF-eye_up.R')
    bone.head = -0.0520, -0.1143, 1.7959
    bone.tail = -0.0590, -0.1589, 1.8121
    bone.roll = -4.1015
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['DEF-eye_up.R'] = bone.name
    bone = arm.edit_bones.new('DEF-eye_down.R')
    bone.head = -0.0520, -0.1143, 1.7959
    bone.tail = -0.0593, -0.1570, 1.7767
    bone.roll = -2.4086
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['DEF-eye_down.R'] = bone.name
    bone = arm.edit_bones.new('DEF-eye.R')
    bone.head = -0.0520, -0.1143, 1.7959
    bone.tail = -0.0590, -0.1585, 1.7961
    bone.roll = -0.0009
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['DEF-eye.R'] = bone.name
    bone = arm.edit_bones.new('eye_up_C.R')
    bone.head = -0.0622, -0.1798, 1.8197
    bone.tail = -0.0622, -0.2011, 1.8197
    bone.roll = -0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['eye_up_C.R'] = bone.name
    bone = arm.edit_bones.new('eye_down_C.R')
    bone.head = -0.0629, -0.1786, 1.7670
    bone.tail = -0.0629, -0.1998, 1.7670
    bone.roll = -0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['head']]
    bones['eye_down_C.R'] = bone.name
    bone = arm.edit_bones.new('forearm.L')
    bone.head = 0.3327, 0.0357, 1.1761
    bone.tail = 0.4791, 0.0064, 0.9978
    bone.roll = 2.4830
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['upper_arm.L']]
    bones['forearm.L'] = bone.name
    bone = arm.edit_bones.new('forearm.R')
    bone.head = -0.3327, 0.0357, 1.1761
    bone.tail = -0.4791, 0.0064, 0.9978
    bone.roll = -2.4830
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['upper_arm.R']]
    bones['forearm.R'] = bone.name
    bone = arm.edit_bones.new('tip.L')
    bone.head = 0.1673, -0.1808, 0.0000
    bone.tail = 0.1673, -0.2046, 0.0000
    bone.roll = -6.2832
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['toe.L']]
    bones['tip.L'] = bone.name
    bone = arm.edit_bones.new('tip.R')
    bone.head = -0.1673, -0.1808, 0.0000
    bone.tail = -0.1673, -0.2046, 0.0000
    bone.roll = 6.2832
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['toe.R']]
    bones['tip.R'] = bone.name
    bone = arm.edit_bones.new('eye_C.L')
    bone.head = 0.0815, -0.3025, 1.7967
    bone.tail = 0.0815, -0.3470, 1.7967
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['eye_C']]
    bones['eye_C.L'] = bone.name
    bone = arm.edit_bones.new('eye_C.R')
    bone.head = -0.0815, -0.3025, 1.7967
    bone.tail = -0.0815, -0.3470, 1.7967
    bone.roll = -0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['eye_C']]
    bones['eye_C.R'] = bone.name
    bone = arm.edit_bones.new('hand.L')
    bone.head = 0.4791, 0.0064, 0.9978
    bone.tail = 0.5244, -0.0040, 0.9317
    bone.roll = 2.5817
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['forearm.L']]
    bones['hand.L'] = bone.name
    bone = arm.edit_bones.new('hand.R')
    bone.head = -0.4791, 0.0064, 0.9978
    bone.tail = -0.5244, -0.0040, 0.9317
    bone.roll = -2.5817
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['forearm.R']]
    bones['hand.R'] = bone.name
    bone = arm.edit_bones.new('palm.01.L')
    bone.head = 0.5122, -0.0457, 0.9687
    bone.tail = 0.5529, -0.0534, 0.9158
    bone.roll = -2.1444
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['hand.L']]
    bones['palm.01.L'] = bone.name
    bone = arm.edit_bones.new('palm.02.L')
    bone.head = 0.5180, -0.0182, 0.9660
    bone.tail = 0.5590, -0.0259, 0.9154
    bone.roll = -2.2121
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['hand.L']]
    bones['palm.02.L'] = bone.name
    bone = arm.edit_bones.new('palm.03.L')
    bone.head = 0.5180, 0.0048, 0.9654
    bone.tail = 0.5549, 0.0025, 0.9165
    bone.roll = -2.3714
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['hand.L']]
    bones['palm.03.L'] = bone.name
    bone = arm.edit_bones.new('palm.04.L')
    bone.head = 0.5075, 0.0260, 0.9599
    bone.tail = 0.5419, 0.0277, 0.9169
    bone.roll = -2.3916
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['hand.L']]
    bones['palm.04.L'] = bone.name
    bone = arm.edit_bones.new('palm.01.R')
    bone.head = -0.5122, -0.0457, 0.9687
    bone.tail = -0.5529, -0.0534, 0.9158
    bone.roll = 2.1444
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['hand.R']]
    bones['palm.01.R'] = bone.name
    bone = arm.edit_bones.new('palm.02.R')
    bone.head = -0.5180, -0.0182, 0.9660
    bone.tail = -0.5590, -0.0259, 0.9154
    bone.roll = 2.2121
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['hand.R']]
    bones['palm.02.R'] = bone.name
    bone = arm.edit_bones.new('palm.03.R')
    bone.head = -0.5180, 0.0048, 0.9654
    bone.tail = -0.5549, 0.0025, 0.9165
    bone.roll = 2.3714
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['hand.R']]
    bones['palm.03.R'] = bone.name
    bone = arm.edit_bones.new('palm.04.R')
    bone.head = -0.5075, 0.0260, 0.9599
    bone.tail = -0.5419, 0.0277, 0.9169
    bone.roll = 2.3916
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['hand.R']]
    bones['palm.04.R'] = bone.name
    bone = arm.edit_bones.new('f_index.01.L')
    bone.head = 0.5529, -0.0534, 0.9158
    bone.tail = 0.5731, -0.0595, 0.8753
    bone.roll = -1.8856
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['palm.01.L']]
    bones['f_index.01.L'] = bone.name
    bone = arm.edit_bones.new('thumb.01.L')
    bone.head = 0.4922, -0.0298, 0.9603
    bone.tail = 0.4988, -0.0677, 0.9258
    bone.roll = 0.1568
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['palm.01.L']]
    bones['thumb.01.L'] = bone.name
    bone = arm.edit_bones.new('f_middle.01.L')
    bone.head = 0.5590, -0.0259, 0.9154
    bone.tail = 0.5806, -0.0312, 0.8688
    bone.roll = -1.9181
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['palm.02.L']]
    bones['f_middle.01.L'] = bone.name
    bone = arm.edit_bones.new('f_ring.01.L')
    bone.head = 0.5549, 0.0025, 0.9165
    bone.tail = 0.5758, -0.0007, 0.8744
    bone.roll = -2.1760
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['palm.03.L']]
    bones['f_ring.01.L'] = bone.name
    bone = arm.edit_bones.new('f_pinky.01.L')
    bone.head = 0.5419, 0.0277, 0.9169
    bone.tail = 0.5587, 0.0278, 0.8879
    bone.roll = -2.2565
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['palm.04.L']]
    bones['f_pinky.01.L'] = bone.name
    bone = arm.edit_bones.new('f_index.01.R')
    bone.head = -0.5529, -0.0534, 0.9158
    bone.tail = -0.5731, -0.0595, 0.8753
    bone.roll = 1.8856
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['palm.01.R']]
    bones['f_index.01.R'] = bone.name
    bone = arm.edit_bones.new('thumb.01.R')
    bone.head = -0.4922, -0.0298, 0.9603
    bone.tail = -0.4988, -0.0677, 0.9258
    bone.roll = -0.1568
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['palm.01.R']]
    bones['thumb.01.R'] = bone.name
    bone = arm.edit_bones.new('f_middle.01.R')
    bone.head = -0.5590, -0.0259, 0.9154
    bone.tail = -0.5806, -0.0312, 0.8688
    bone.roll = 1.9181
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['palm.02.R']]
    bones['f_middle.01.R'] = bone.name
    bone = arm.edit_bones.new('f_ring.01.R')
    bone.head = -0.5549, 0.0025, 0.9165
    bone.tail = -0.5758, -0.0007, 0.8744
    bone.roll = 2.1760
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['palm.03.R']]
    bones['f_ring.01.R'] = bone.name
    bone = arm.edit_bones.new('f_pinky.01.R')
    bone.head = -0.5419, 0.0277, 0.9169
    bone.tail = -0.5587, 0.0278, 0.8879
    bone.roll = 2.2565
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['palm.04.R']]
    bones['f_pinky.01.R'] = bone.name
    bone = arm.edit_bones.new('f_index.02.L')
    bone.head = 0.5731, -0.0595, 0.8753
    bone.tail = 0.5805, -0.0628, 0.8483
    bone.roll = -1.6588
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_index.01.L']]
    bones['f_index.02.L'] = bone.name
    bone = arm.edit_bones.new('thumb.02.L')
    bone.head = 0.4988, -0.0677, 0.9258
    bone.tail = 0.5079, -0.0831, 0.9013
    bone.roll = -0.1239
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['thumb.01.L']]
    bones['thumb.02.L'] = bone.name
    bone = arm.edit_bones.new('f_middle.02.L')
    bone.head = 0.5806, -0.0312, 0.8688
    bone.tail = 0.5902, -0.0337, 0.8364
    bone.roll = -1.7608
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_middle.01.L']]
    bones['f_middle.02.L'] = bone.name
    bone = arm.edit_bones.new('f_ring.02.L')
    bone.head = 0.5758, -0.0007, 0.8744
    bone.tail = 0.5834, -0.0024, 0.8472
    bone.roll = -1.9775
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_ring.01.L']]
    bones['f_ring.02.L'] = bone.name
    bone = arm.edit_bones.new('f_pinky.02.L')
    bone.head = 0.5587, 0.0278, 0.8879
    bone.tail = 0.5705, 0.0273, 0.8654
    bone.roll = -2.2192
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_pinky.01.L']]
    bones['f_pinky.02.L'] = bone.name
    bone = arm.edit_bones.new('f_index.02.R')
    bone.head = -0.5731, -0.0595, 0.8753
    bone.tail = -0.5805, -0.0628, 0.8483
    bone.roll = 1.6588
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_index.01.R']]
    bones['f_index.02.R'] = bone.name
    bone = arm.edit_bones.new('thumb.02.R')
    bone.head = -0.4988, -0.0677, 0.9258
    bone.tail = -0.5079, -0.0831, 0.9013
    bone.roll = 0.1239
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['thumb.01.R']]
    bones['thumb.02.R'] = bone.name
    bone = arm.edit_bones.new('f_middle.02.R')
    bone.head = -0.5806, -0.0312, 0.8688
    bone.tail = -0.5902, -0.0337, 0.8364
    bone.roll = 1.7608
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_middle.01.R']]
    bones['f_middle.02.R'] = bone.name
    bone = arm.edit_bones.new('f_ring.02.R')
    bone.head = -0.5758, -0.0007, 0.8744
    bone.tail = -0.5834, -0.0024, 0.8472
    bone.roll = 1.9775
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_ring.01.R']]
    bones['f_ring.02.R'] = bone.name
    bone = arm.edit_bones.new('f_pinky.02.R')
    bone.head = -0.5587, 0.0278, 0.8879
    bone.tail = -0.5705, 0.0273, 0.8654
    bone.roll = 2.2192
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_pinky.01.R']]
    bones['f_pinky.02.R'] = bone.name
    bone = arm.edit_bones.new('f_index.03.L')
    bone.head = 0.5805, -0.0628, 0.8483
    bone.tail = 0.5865, -0.0658, 0.8181
    bone.roll = -1.6026
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_index.02.L']]
    bones['f_index.03.L'] = bone.name
    bone = arm.edit_bones.new('thumb.03.L')
    bone.head = 0.5079, -0.0831, 0.9013
    bone.tail = 0.5190, -0.0929, 0.8720
    bone.roll = -0.1066
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['thumb.02.L']]
    bones['thumb.03.L'] = bone.name
    bone = arm.edit_bones.new('f_middle.03.L')
    bone.head = 0.5902, -0.0337, 0.8364
    bone.tail = 0.5939, -0.0356, 0.8064
    bone.roll = -1.5953
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_middle.02.L']]
    bones['f_middle.03.L'] = bone.name
    bone = arm.edit_bones.new('f_ring.03.L')
    bone.head = 0.5834, -0.0024, 0.8472
    bone.tail = 0.5905, -0.0040, 0.8199
    bone.roll = -1.9607
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_ring.02.L']]
    bones['f_ring.03.L'] = bone.name
    bone = arm.edit_bones.new('f_pinky.03.L')
    bone.head = 0.5705, 0.0273, 0.8654
    bone.tail = 0.5777, 0.0264, 0.8415
    bone.roll = -2.0228
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_pinky.02.L']]
    bones['f_pinky.03.L'] = bone.name
    bone = arm.edit_bones.new('f_index.03.R')
    bone.head = -0.5805, -0.0628, 0.8483
    bone.tail = -0.5865, -0.0658, 0.8181
    bone.roll = 1.6026
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_index.02.R']]
    bones['f_index.03.R'] = bone.name
    bone = arm.edit_bones.new('thumb.03.R')
    bone.head = -0.5079, -0.0831, 0.9013
    bone.tail = -0.5190, -0.0929, 0.8720
    bone.roll = 0.1066
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['thumb.02.R']]
    bones['thumb.03.R'] = bone.name
    bone = arm.edit_bones.new('f_middle.03.R')
    bone.head = -0.5902, -0.0337, 0.8364
    bone.tail = -0.5939, -0.0356, 0.8064
    bone.roll = 1.5953
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_middle.02.R']]
    bones['f_middle.03.R'] = bone.name
    bone = arm.edit_bones.new('f_ring.03.R')
    bone.head = -0.5834, -0.0024, 0.8472
    bone.tail = -0.5905, -0.0040, 0.8199
    bone.roll = 1.9607
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_ring.02.R']]
    bones['f_ring.03.R'] = bone.name
    bone = arm.edit_bones.new('f_pinky.03.R')
    bone.head = -0.5705, 0.0273, 0.8654
    bone.tail = -0.5777, 0.0264, 0.8415
    bone.roll = 2.0228
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['f_pinky.02.R']]
    bones['f_pinky.03.R'] = bone.name

    bpy.ops.object.mode_set(mode='OBJECT')
    pbone = obj.pose.bones[bones['char_root']]
    pbone.rigify_type = 'game.basic.super_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face', 'Face (Primary)', 'Face (Secondary)', 'Torso', 'Fingers', 'Arm.L (IK)', 'Arm.R (IK)', 'Leg.L (IK)', 'Leg.R (IK)')
    try:
        pbone.rigify_parameters.super_copy_widget_type = 'diamond'
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.make_deform = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['spine']]
    pbone.rigify_type = 'game.spines.basic_spine'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Torso')
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Torso (Tweak)')
    assign_bone_collection_refs(pbone.rigify_parameters, 'fk', 'Torso (Tweak)')
    try:
        pbone.rigify_parameters.pivot_pos = 1
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['spine.001']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Torso')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['thigh.L']]
    pbone.rigify_type = 'game.limbs.leg'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.L (IK)')
    try:
        pbone.rigify_parameters.extra_ik_toe = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.segments = 1
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'fk', 'Leg.L (FK)')
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Leg.L (Tweak)')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['thigh.R']]
    pbone.rigify_type = 'game.limbs.leg'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.R (IK)')
    try:
        pbone.rigify_parameters.segments = 1
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.extra_ik_toe = True
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'fk', 'Leg.R (FK)')
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Leg.R (Tweak)')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['spine.003']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Torso')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['shin.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.L (IK)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['shin.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.R (IK)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['neck.001']]
    pbone.rigify_type = 'game.spines.super_head'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Torso')
    try:
        pbone.rigify_parameters.connect_chain = True
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Torso (Tweak)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['shoulder.L']]
    pbone.rigify_type = 'game.basic.super_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'YXZ'
    assign_bone_collections(pbone, 'Torso')
    try:
        pbone.rigify_parameters.make_widget = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.super_copy_widget_type = 'shoulder'
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['shoulder.R']]
    pbone.rigify_type = 'game.basic.super_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'YXZ'
    assign_bone_collections(pbone, 'Torso')
    try:
        pbone.rigify_parameters.make_widget = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.super_copy_widget_type = 'shoulder'
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['foot.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.L (IK)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['foot.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.R (IK)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['head']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Torso')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['upper_arm.L']]
    pbone.rigify_type = 'game.limbs.arm'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Arm.L (IK)')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Arm.L (Tweak)')
    assign_bone_collection_refs(pbone.rigify_parameters, 'fk', 'Arm.L (FK)')
    try:
        pbone.rigify_parameters.segments = 1
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.bbones = 1
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['upper_arm.R']]
    pbone.rigify_type = 'game.limbs.arm'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Arm.R (IK)')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Arm.R (Tweak)')
    assign_bone_collection_refs(pbone.rigify_parameters, 'fk', 'Arm.R (FK)')
    try:
        pbone.rigify_parameters.segments = 1
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.bbones = 1
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['toe.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.L (IK)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['heel.02.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.L (IK)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['toe.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.R (IK)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['heel.02.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.R (IK)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['DEF-eye_up.L']]
    pbone.rigify_type = 'game.basic.raw_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = True
    except AttributeError:
        pass
    con = pbone.constraints.new('COPY_ROTATION')
    con.name = 'Copy Rotation'
    con.target = obj
    con.owner_space = 'LOCAL'
    con.target_space = 'LOCAL'
    con.subtarget = 'DEF-eye.L'
    con.use_x = True
    con.use_y = False
    con.use_z = False
    con.invert_x = False
    con.invert_y = False
    con.invert_z = False
    con.euler_order = 'AUTO'
    con.mix_mode = 'REPLACE'
    con.use_offset = False
    con = pbone.constraints.new('TRANSFORM')
    con.name = 'Transformation'
    con.target = obj
    con.owner_space = 'LOCAL'
    con.target_space = 'LOCAL'
    con.subtarget = 'eye_up_C.L'
    con.map_from = 'LOCATION'
    con.map_to = 'ROTATION'
    con.map_to_x_from = 'Z'
    con.map_to_y_from = 'Y'
    con.map_to_z_from = 'X'
    con.use_motion_extrapolate = False
    con.from_rotation_mode = 'AUTO'
    con.to_euler_order = 'AUTO'
    con.from_min_x = 0.0
    con.from_min_y = 0.0
    con.from_min_z = -0.03999999910593033
    con.from_max_x = 0.0
    con.from_max_y = 0.0
    con.from_max_z = 0.03999999910593033
    con.to_min_x = 0.0
    con.to_min_y = 0.0
    con.to_min_z = 0.0
    con.to_max_x = 0.0
    con.to_max_y = 0.0
    con.to_max_z = 0.0
    con.mix_mode = 'ADD'
    con.from_min_x_rot = 0.0
    con.from_min_y_rot = 0.0
    con.from_min_z_rot = 0.0
    con.from_max_x_rot = 0.0
    con.from_max_y_rot = 0.0
    con.from_max_z_rot = 0.0
    con.to_min_x_rot = -0.6981316804885864
    con.to_min_y_rot = 0.0
    con.to_min_z_rot = 0.0
    con.to_max_x_rot = 0.6981316804885864
    con.to_max_y_rot = 0.0
    con.to_max_z_rot = 0.0
    con.mix_mode_rot = 'ADD'
    con.from_min_x_scale = 1.0
    con.from_min_y_scale = 1.0
    con.from_min_z_scale = 1.0
    con.from_max_x_scale = 1.0
    con.from_max_y_scale = 1.0
    con.from_max_z_scale = 1.0
    con.to_min_x_scale = 1.0
    con.to_min_y_scale = 1.0
    con.to_min_z_scale = 1.0
    con.to_max_x_scale = 1.0
    con.to_max_y_scale = 1.0
    con.to_max_z_scale = 1.0
    con.mix_mode_scale = 'REPLACE'
    con = pbone.constraints.new('LIMIT_ROTATION')
    con.name = 'Limit Rotation'
    con.owner_space = 'LOCAL'
    con.use_limit_x = True
    con.use_limit_y = False
    con.use_limit_z = False
    con.min_x = -0.8761552572250366
    con.min_y = 0.0
    con.min_z = 0.0
    con.max_x = 0.10821040719747543
    con.max_y = 0.0
    con.max_z = 0.0
    con.euler_order = 'AUTO'
    con.use_transform_limit = False
    con.use_legacy_behavior = False
    pbone = obj.pose.bones[bones['DEF-eye_down.L']]
    pbone.rigify_type = 'game.basic.raw_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.make_widget = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = True
    except AttributeError:
        pass
    con = pbone.constraints.new('COPY_ROTATION')
    con.name = 'Copy Rotation'
    con.target = obj
    con.owner_space = 'LOCAL'
    con.target_space = 'LOCAL'
    con.subtarget = 'DEF-eye.L'
    con.use_x = True
    con.use_y = False
    con.use_z = False
    con.invert_x = False
    con.invert_y = False
    con.invert_z = False
    con.euler_order = 'AUTO'
    con.mix_mode = 'REPLACE'
    con.use_offset = False
    con = pbone.constraints.new('TRANSFORM')
    con.name = 'Transformation'
    con.target = obj
    con.owner_space = 'LOCAL'
    con.target_space = 'LOCAL'
    con.subtarget = 'eye_down_C.L'
    con.map_from = 'LOCATION'
    con.map_to = 'ROTATION'
    con.map_to_x_from = 'Z'
    con.map_to_y_from = 'Y'
    con.map_to_z_from = 'X'
    con.use_motion_extrapolate = False
    con.from_rotation_mode = 'AUTO'
    con.to_euler_order = 'AUTO'
    con.from_min_x = 0.0
    con.from_min_y = 0.0
    con.from_min_z = -0.03999999910593033
    con.from_max_x = 0.0
    con.from_max_y = 0.0
    con.from_max_z = 0.03999999910593033
    con.to_min_x = 0.0
    con.to_min_y = 0.0
    con.to_min_z = 0.0
    con.to_max_x = 0.0
    con.to_max_y = 0.0
    con.to_max_z = 0.0
    con.mix_mode = 'ADD'
    con.from_min_x_rot = 0.0
    con.from_min_y_rot = 0.0
    con.from_min_z_rot = 0.0
    con.from_max_x_rot = 0.0
    con.from_max_y_rot = 0.0
    con.from_max_z_rot = 0.0
    con.to_min_x_rot = -0.6981316804885864
    con.to_min_y_rot = 0.0
    con.to_min_z_rot = 0.0
    con.to_max_x_rot = 0.6981316804885864
    con.to_max_y_rot = 0.0
    con.to_max_z_rot = 0.0
    con.mix_mode_rot = 'ADD'
    con.from_min_x_scale = 1.0
    con.from_min_y_scale = 1.0
    con.from_min_z_scale = 1.0
    con.from_max_x_scale = 1.0
    con.from_max_y_scale = 1.0
    con.from_max_z_scale = 1.0
    con.to_min_x_scale = 1.0
    con.to_min_y_scale = 1.0
    con.to_min_z_scale = 1.0
    con.to_max_x_scale = 1.0
    con.to_max_y_scale = 1.0
    con.to_max_z_scale = 1.0
    con.mix_mode_scale = 'REPLACE'
    con = pbone.constraints.new('LIMIT_ROTATION')
    con.name = 'Limit Rotation'
    con.owner_space = 'LOCAL'
    con.use_limit_x = True
    con.use_limit_y = False
    con.use_limit_z = False
    con.min_x = -0.10297447443008423
    con.min_y = 0.0
    con.min_z = 0.0
    con.max_x = 0.8726646304130554
    con.max_y = 0.0
    con.max_z = 0.0
    con.euler_order = 'AUTO'
    con.use_transform_limit = False
    con.use_legacy_behavior = False
    pbone = obj.pose.bones[bones['DEF-eye.L']]
    pbone.rigify_type = 'game.basic.raw_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.make_widget = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = True
    except AttributeError:
        pass
    con = pbone.constraints.new('DAMPED_TRACK')
    con.name = 'Damped Track'
    con.target = obj
    con.head_tail = 0.0
    con.use_bbone_shape = False
    con.subtarget = 'eye_C.L'
    con.track_axis = 'TRACK_Y'
    pbone = obj.pose.bones[bones['eye_C']]
    pbone.rigify_type = 'game.basic.raw_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.optional_widget_type = 'diamond'
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['eye_up_C.L']]
    pbone.rigify_type = 'game.basic.raw_copy'
    pbone.lock_location = (True, True, False)
    pbone.lock_rotation = (True, True, True)
    pbone.lock_rotation_w = True
    pbone.lock_scale = (True, True, True)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.optional_widget_type = 'circle'
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = True
    except AttributeError:
        pass
    con = pbone.constraints.new('LIMIT_LOCATION')
    con.name = 'Limit Location'
    con.owner_space = 'LOCAL'
    con.use_min_x = False
    con.use_min_y = False
    con.use_min_z = True
    con.use_max_x = False
    con.use_max_y = False
    con.use_max_z = True
    con.min_x = 0.0
    con.min_y = 0.0
    con.min_z = -0.04111799970269203
    con.max_x = 0.0
    con.max_y = 0.0
    con.max_z = 0.006668000016361475
    con.use_transform_limit = False
    pbone = obj.pose.bones[bones['eye_down_C.L']]
    pbone.rigify_type = 'game.basic.raw_copy'
    pbone.lock_location = (True, True, False)
    pbone.lock_rotation = (True, True, True)
    pbone.lock_rotation_w = True
    pbone.lock_scale = (True, True, True)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.optional_widget_type = 'circle'
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = True
    except AttributeError:
        pass
    con = pbone.constraints.new('LIMIT_LOCATION')
    con.name = 'Limit Location'
    con.owner_space = 'LOCAL'
    con.use_min_x = False
    con.use_min_y = False
    con.use_min_z = True
    con.use_max_x = False
    con.use_max_y = False
    con.use_max_z = True
    con.min_x = 0.0
    con.min_y = 0.0
    con.min_z = -0.004912000149488449
    con.max_x = 0.0
    con.max_y = 0.0
    con.max_z = 0.043331995606422424
    con.use_transform_limit = False
    pbone = obj.pose.bones[bones['DEF-eye_up.R']]
    pbone.rigify_type = 'game.basic.raw_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = True
    except AttributeError:
        pass
    con = pbone.constraints.new('COPY_ROTATION')
    con.name = 'Copy Rotation'
    con.target = obj
    con.owner_space = 'LOCAL'
    con.target_space = 'LOCAL'
    con.subtarget = 'DEF-eye.R'
    con.use_x = True
    con.use_y = False
    con.use_z = False
    con.invert_x = False
    con.invert_y = False
    con.invert_z = False
    con.euler_order = 'AUTO'
    con.mix_mode = 'REPLACE'
    con.use_offset = False
    con = pbone.constraints.new('TRANSFORM')
    con.name = 'Transformation'
    con.target = obj
    con.owner_space = 'LOCAL'
    con.target_space = 'LOCAL'
    con.subtarget = 'eye_up_C.R'
    con.map_from = 'LOCATION'
    con.map_to = 'ROTATION'
    con.map_to_x_from = 'Z'
    con.map_to_y_from = 'Y'
    con.map_to_z_from = 'X'
    con.use_motion_extrapolate = False
    con.from_rotation_mode = 'AUTO'
    con.to_euler_order = 'AUTO'
    con.from_min_x = -0.0
    con.from_min_y = 0.0
    con.from_min_z = -0.03999999910593033
    con.from_max_x = 0.0
    con.from_max_y = 0.0
    con.from_max_z = 0.03999999910593033
    con.to_min_x = 0.0
    con.to_min_y = 0.0
    con.to_min_z = 0.0
    con.to_max_x = 0.0
    con.to_max_y = 0.0
    con.to_max_z = 0.0
    con.mix_mode = 'ADD'
    con.from_min_x_rot = 0.0
    con.from_min_y_rot = 0.0
    con.from_min_z_rot = 0.0
    con.from_max_x_rot = 0.0
    con.from_max_y_rot = 0.0
    con.from_max_z_rot = 0.0
    con.to_min_x_rot = -0.6981316804885864
    con.to_min_y_rot = 0.0
    con.to_min_z_rot = 0.0
    con.to_max_x_rot = 0.6981316804885864
    con.to_max_y_rot = 0.0
    con.to_max_z_rot = 0.0
    con.mix_mode_rot = 'ADD'
    con.from_min_x_scale = 1.0
    con.from_min_y_scale = 1.0
    con.from_min_z_scale = 1.0
    con.from_max_x_scale = 1.0
    con.from_max_y_scale = 1.0
    con.from_max_z_scale = 1.0
    con.to_min_x_scale = 1.0
    con.to_min_y_scale = 1.0
    con.to_min_z_scale = 1.0
    con.to_max_x_scale = 1.0
    con.to_max_y_scale = 1.0
    con.to_max_z_scale = 1.0
    con.mix_mode_scale = 'REPLACE'
    con = pbone.constraints.new('LIMIT_ROTATION')
    con.name = 'Limit Rotation'
    con.owner_space = 'LOCAL'
    con.use_limit_x = True
    con.use_limit_y = False
    con.use_limit_z = False
    con.min_x = -0.8761552572250366
    con.min_y = 0.0
    con.min_z = 0.0
    con.max_x = 0.10821040719747543
    con.max_y = 0.0
    con.max_z = 0.0
    con.euler_order = 'AUTO'
    con.use_transform_limit = False
    con.use_legacy_behavior = False
    pbone = obj.pose.bones[bones['DEF-eye_down.R']]
    pbone.rigify_type = 'game.basic.raw_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.make_widget = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = True
    except AttributeError:
        pass
    con = pbone.constraints.new('COPY_ROTATION')
    con.name = 'Copy Rotation'
    con.target = obj
    con.owner_space = 'LOCAL'
    con.target_space = 'LOCAL'
    con.subtarget = 'DEF-eye.R'
    con.use_x = True
    con.use_y = False
    con.use_z = False
    con.invert_x = False
    con.invert_y = False
    con.invert_z = False
    con.euler_order = 'AUTO'
    con.mix_mode = 'REPLACE'
    con.use_offset = False
    con = pbone.constraints.new('TRANSFORM')
    con.name = 'Transformation'
    con.target = obj
    con.owner_space = 'LOCAL'
    con.target_space = 'LOCAL'
    con.subtarget = 'eye_down_C.R'
    con.map_from = 'LOCATION'
    con.map_to = 'ROTATION'
    con.map_to_x_from = 'Z'
    con.map_to_y_from = 'Y'
    con.map_to_z_from = 'X'
    con.use_motion_extrapolate = False
    con.from_rotation_mode = 'AUTO'
    con.to_euler_order = 'AUTO'
    con.from_min_x = -0.0
    con.from_min_y = 0.0
    con.from_min_z = -0.03999999910593033
    con.from_max_x = 0.0
    con.from_max_y = 0.0
    con.from_max_z = 0.03999999910593033
    con.to_min_x = 0.0
    con.to_min_y = 0.0
    con.to_min_z = 0.0
    con.to_max_x = 0.0
    con.to_max_y = 0.0
    con.to_max_z = 0.0
    con.mix_mode = 'ADD'
    con.from_min_x_rot = 0.0
    con.from_min_y_rot = 0.0
    con.from_min_z_rot = 0.0
    con.from_max_x_rot = 0.0
    con.from_max_y_rot = 0.0
    con.from_max_z_rot = 0.0
    con.to_min_x_rot = -0.6981316804885864
    con.to_min_y_rot = 0.0
    con.to_min_z_rot = 0.0
    con.to_max_x_rot = 0.6981316804885864
    con.to_max_y_rot = 0.0
    con.to_max_z_rot = 0.0
    con.mix_mode_rot = 'ADD'
    con.from_min_x_scale = 1.0
    con.from_min_y_scale = 1.0
    con.from_min_z_scale = 1.0
    con.from_max_x_scale = 1.0
    con.from_max_y_scale = 1.0
    con.from_max_z_scale = 1.0
    con.to_min_x_scale = 1.0
    con.to_min_y_scale = 1.0
    con.to_min_z_scale = 1.0
    con.to_max_x_scale = 1.0
    con.to_max_y_scale = 1.0
    con.to_max_z_scale = 1.0
    con.mix_mode_scale = 'REPLACE'
    con = pbone.constraints.new('LIMIT_ROTATION')
    con.name = 'Limit Rotation'
    con.owner_space = 'LOCAL'
    con.use_limit_x = True
    con.use_limit_y = False
    con.use_limit_z = False
    con.min_x = -0.10297447443008423
    con.min_y = 0.0
    con.min_z = 0.0
    con.max_x = 0.8726646304130554
    con.max_y = 0.0
    con.max_z = 0.0
    con.euler_order = 'AUTO'
    con.use_transform_limit = False
    con.use_legacy_behavior = False
    pbone = obj.pose.bones[bones['DEF-eye.R']]
    pbone.rigify_type = 'game.basic.raw_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.make_widget = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.relink_constraints = True
    except AttributeError:
        pass
    con = pbone.constraints.new('DAMPED_TRACK')
    con.name = 'Damped Track'
    con.target = obj
    con.head_tail = 0.0
    con.use_bbone_shape = False
    con.subtarget = 'eye_C.R'
    con.track_axis = 'TRACK_Y'
    pbone = obj.pose.bones[bones['eye_up_C.R']]
    pbone.rigify_type = 'game.basic.raw_copy'
    pbone.lock_location = (True, True, False)
    pbone.lock_rotation = (True, True, True)
    pbone.lock_rotation_w = True
    pbone.lock_scale = (True, True, True)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.optional_widget_type = 'circle'
    except AttributeError:
        pass
    con = pbone.constraints.new('LIMIT_LOCATION')
    con.name = 'Limit Location'
    con.owner_space = 'LOCAL'
    con.use_min_x = False
    con.use_min_y = False
    con.use_min_z = True
    con.use_max_x = False
    con.use_max_y = False
    con.use_max_z = True
    con.min_x = -0.0
    con.min_y = 0.0
    con.min_z = -0.04111799970269203
    con.max_x = 0.0
    con.max_y = 0.0
    con.max_z = 0.006668000016361475
    con.use_transform_limit = False
    pbone = obj.pose.bones[bones['eye_down_C.R']]
    pbone.rigify_type = 'game.basic.raw_copy'
    pbone.lock_location = (True, True, False)
    pbone.lock_rotation = (True, True, True)
    pbone.lock_rotation_w = True
    pbone.lock_scale = (True, True, True)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.optional_widget_type = 'circle'
    except AttributeError:
        pass
    con = pbone.constraints.new('LIMIT_LOCATION')
    con.name = 'Limit Location'
    con.owner_space = 'LOCAL'
    con.use_min_x = False
    con.use_min_y = False
    con.use_min_z = True
    con.use_max_x = False
    con.use_max_y = False
    con.use_max_z = True
    con.min_x = -0.0
    con.min_y = 0.0
    con.min_z = -0.004912000149488449
    con.max_x = 0.0
    con.max_y = 0.0
    con.max_z = 0.043331995606422424
    con.use_transform_limit = False
    pbone = obj.pose.bones[bones['forearm.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Arm.L (IK)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['forearm.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Arm.R (IK)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['tip.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.L (IK)')
    pbone = obj.pose.bones[bones['tip.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Leg.R (IK)')
    pbone = obj.pose.bones[bones['eye_C.L']]
    pbone.rigify_type = 'game.basic.raw_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.optional_widget_type = 'circle'
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['eye_C.R']]
    pbone.rigify_type = 'game.basic.raw_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Face')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.optional_widget_type = 'circle'
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['hand.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Arm.L (IK)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['hand.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Arm.R (IK)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['palm.01.L']]
    pbone.rigify_type = 'game.limbs.super_palm'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'YXZ'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['palm.02.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'YXZ'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['palm.03.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'YXZ'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['palm.04.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'YXZ'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['palm.01.R']]
    pbone.rigify_type = 'game.limbs.super_palm'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'YXZ'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['palm.02.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'YXZ'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['palm.03.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'YXZ'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['palm.04.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'YXZ'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_index.01.L']]
    pbone.rigify_type = 'game.limbs.super_finger'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Fingers (Detail)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['thumb.01.L']]
    pbone.rigify_type = 'game.limbs.super_finger'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Fingers (Detail)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_middle.01.L']]
    pbone.rigify_type = 'game.limbs.super_finger'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Fingers (Detail)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_ring.01.L']]
    pbone.rigify_type = 'game.limbs.super_finger'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Fingers (Detail)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_pinky.01.L']]
    pbone.rigify_type = 'game.limbs.super_finger'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Fingers (Detail)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_index.01.R']]
    pbone.rigify_type = 'game.limbs.super_finger'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Fingers (Detail)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['thumb.01.R']]
    pbone.rigify_type = 'game.limbs.super_finger'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Fingers (Detail)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_middle.01.R']]
    pbone.rigify_type = 'game.limbs.super_finger'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Fingers (Detail)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_ring.01.R']]
    pbone.rigify_type = 'game.limbs.super_finger'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Fingers (Detail)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_pinky.01.R']]
    pbone.rigify_type = 'game.limbs.super_finger'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.ik_local_location = False
    except AttributeError:
        pass
    assign_bone_collection_refs(pbone.rigify_parameters, 'tweak', 'Fingers (Detail)')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_index.02.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['thumb.02.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_middle.02.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_ring.02.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_pinky.02.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_index.02.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['thumb.02.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_middle.02.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_ring.02.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_pinky.02.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_index.03.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['thumb.03.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_middle.03.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_ring.03.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_pinky.03.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_index.03.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['thumb.03.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_middle.03.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_ring.03.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['f_pinky.03.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    assign_bone_collections(pbone, 'Fingers')
    try:
        pbone.rigify_parameters.enable_scale = True
    except AttributeError:
        pass

    bpy.ops.object.mode_set(mode='EDIT')
    for bone in arm.edit_bones:
        bone.select = False
        bone.select_head = False
        bone.select_tail = False
    for b in bones:
        bone = arm.edit_bones[bones[b]]
        bone.select = True
        bone.select_head = True
        bone.select_tail = True
        bone.bbone_x = bone.bbone_z = bone.length * 0.05
        arm.edit_bones.active = bone

    arm.collections.active_index = 0

    return bones


if __name__ == "__main__":
    create(bpy.context.active_object)
